---
# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
clusterName: ${clusterName}
endpoint: "https://${clusterDomain}.${rootDomain}:6443"
domain: ${clusterDomain}.${rootDomain}

talosVersion: v1.6.0
kubernetesVersion: 1.29.0

cniConfig:
  name: none

additionalApiServerCertSans: &san
  - localhost
  - ${clusterEndpointIP}
  - ${clusterDomain}.${rootDomain}
additionalMachineCertSans: *san

nodes:
  - hostname: ${clusterName}-master-01
    ipAddress: 10.10.16.2
    installDisk: /dev/sda
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        dhcp: false
        mtu: 1500
        routes: &gateway
          - network: 0.0.0.0/0
            gateway: 10.10.16.1
        addresses:
          - 10.10.16.2/20

  - hostname: ${clusterName}-master-02
    ipAddress: 10.10.16.3
    installDisk: /dev/sda
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        dhcp: false
        mtu: 1500
        routes: *gateway
        addresses:
          - 10.10.16.3/20

  - hostname: ${clusterName}-master-03
    ipAddress: 10.10.16.4
    installDisk: /dev/sda
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        dhcp: false
        mtu: 1500
        routes: *gateway
        addresses:
          - 10.10.16.4/20

  - hostname: ${clusterName}-worker-01
    ipAddress: 10.10.16.5
    installDisk: /dev/sda
    controlPlane: false
    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        mtu: 1500
        routes: *gateway
        addresses:
          - 10.10.16.5/20

  - hostname: ${clusterName}-worker-02
    ipAddress: 10.10.16.6
    installDisk: /dev/sda
    controlPlane: false
    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        dhcp: false
        mtu: 1500
        routes: *gateway
        addresses:
          - 10.10.16.6/20

  - hostname: ${clusterName}-worker-03
    ipAddress: 10.10.16.7
    installDisk: /dev/sda
    controlPlane: false
    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        dhcp: false
        mtu: 1500
        routes: *gateway
        addresses:
          - 10.10.16.7/20

patches:
# Disable DHCP search domain
  - |-
    machine:
      network:
        disableSearchDomain: true

# Force nameserver
  - |-
    machine:
      network:
        nameservers:
          - 10.10.10.10

# Configure NTP
  - |-
    machine:
      time:
        servers:
          - time.apple.com
          - time.cloudflare.com

# Enable KubePrism
  - |-
    machine:
      features:
        kubePrism:
          enabled: true
          port: 7445

# Configure cluster loopback
  - |-
    machine:
      network:
        extraHostEntries:
          - ip: ${clusterEndpointIP}
            aliases:
              - ${clusterDomain}.${rootDomain}

# Cluster configuration
  - |-
    cluster:
      allowSchedulingOnMasters: false
      proxy:
        disabled: true
      discovery:
        enabled: true
        registries:
            kubernetes:
              disabled: true
            service: https://api.k8s.homelab.internal/

# Cluster network configuration
## each cluster using three xx.0/20, first = node, second = pod, third = svc;
## exclude 10.10.0.0/20, 10.10.10.10 save for cluster-mesh
  - |-
    cluster:
      network:
        podSubnets:
          - 10.10.32.0/20
        serviceSubnets:
          - 10.10.48.0/20

# Kubelet configuration
  - |-
    machine:
      kubelet:
        extraArgs:
          rotate-server-certificates: "true"
        nodeIP:
          validSubnets:
            - 10.10.16.0/20

# Custom sysctls
  - |-
    machine:
      sysctls:
        fs.inotify.max_user_watches: "1048576"
        fs.inotify.max_user_instances: "8192"

# Enable DRBD
  - |-
    machine:
      kernel:
        modules:
          - name: drbd
            parameters:
              - usermode_helper=disabled
          - name: drbd_transport_tcp

# Configure containerd
## Allowing non-root containers to listen ports < 1024; Allowing ICMP on containers without any capabilities
  - |-
    machine:
      files:
        - content: |
            [plugins]
              [plugins."io.containerd.grpc.v1.cri"]
                sandbox_image = "hub.homelab.internal/k8s.io/pause:3.8"
                enable_unprivileged_ports = true
                enable_unprivileged_icmp = true
          path: /etc/cri/conf.d/20-customization.part
          op: create

# Configure pull through cache, change to zot
  - |-
    machine:
      registries:
        mirrors:
          docker.io:
            endpoints:
              - http://10.10.10.10:5000/v2/docker.io
            overridePath: true
          ghcr.io:
            endpoints:
              - http://10.10.10.10:5000/v2/ghcr.io
            overridePath: true
          gcr.io:
            endpoints:
              - http://10.10.10.10:5000/v2/gcr.io
            overridePath: true
          registry.k8s.io:
            endpoints:
              - http://10.10.10.10:5000/v2/registry.k8s.io
            overridePath: true
          quay.io:
            endpoints:
              - http://10.10.10.10:5000/v2/quay.io
            overridePath: true
          public.ecr.aws:
            endpoints:
              - http://10.10.10.10:5000/v2/public.ecr.aws
            overridePath: true

controlPlane:
  schematic: &talos-image
    customization:
      extraKernelArgs:
        - net.ifnames=0
      systemExtensions:
        officialExtensions:
          - siderolabs/drbd

  patches:
    # ETCD configuration
    - |-
      cluster:
        etcd:
          advertisedSubnets:
            - 10.10.16.0/20

    # Prepare for Rook-CEPH
    - |-
      - op: replace
        path: /cluster/apiServer/admissionControl/0/configuration/exemptions/namespaces
        value:
          - kube-system
          - rook-ceph

worker:
  schematic: *talos-image
